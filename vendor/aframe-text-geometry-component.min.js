(()=>{var e={565:()=>{const{FileLoader:e,Loader:t,ShapePath:o}=THREE;class n{constructor(e){this.isFont=!0,this.type="Font",this.data=e}generateShapes(e,t=100){const o=[],n=function(e,t,o){const n=Array.from(e),r=t/o.resolution,a=(o.boundingBox.yMax-o.boundingBox.yMin+o.underlineThickness)*r,i=[];let l=0,c=0;for(let e=0;e<n.length;e++){const t=n[e];if("\n"===t)l=0,c-=a;else{const e=s(t,r,l,c,o);l+=e.offsetX,i.push(e.path)}}return i}(e,t,this.data);for(let e=0,t=n.length;e<t;e++)o.push(...n[e].toShapes());return o}}function s(e,t,n,s,r){const a=r.glyphs[e]||r.glyphs["?"];if(!a)return void console.error('THREE.Font: character "'+e+'" does not exists in font family '+r.familyName+".");const i=new o;let l,c,u,h,d,f,m,p;if(a.o){const e=a._cachedOutline||(a._cachedOutline=a.o.split(" "));for(let o=0,r=e.length;o<r;)switch(e[o++]){case"m":l=e[o++]*t+n,c=e[o++]*t+s,i.moveTo(l,c);break;case"l":l=e[o++]*t+n,c=e[o++]*t+s,i.lineTo(l,c);break;case"q":u=e[o++]*t+n,h=e[o++]*t+s,d=e[o++]*t+n,f=e[o++]*t+s,i.quadraticCurveTo(d,f,u,h);break;case"b":u=e[o++]*t+n,h=e[o++]*t+s,d=e[o++]*t+n,f=e[o++]*t+s,m=e[o++]*t+n,p=e[o++]*t+s,i.bezierCurveTo(d,f,m,p,u,h)}}return{offsetX:a.ha*t,path:i}}THREE.FontLoader=class extends t{constructor(e){super(e)}load(t,o,n,s){const r=this,a=new e(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(t,(function(e){const t=r.parse(JSON.parse(e));o&&o(t)}),n,s)}parse(e){return new n(e)}}},55:()=>{const{ExtrudeGeometry:e}=THREE;THREE.TextGeometry=class extends e{constructor(e,t={}){const o=t.font;if(void 0===o)super();else{const n=o.generateShapes(e,t.size);t.depth=void 0!==t.height?t.height:50,void 0===t.bevelThickness&&(t.bevelThickness=10),void 0===t.bevelSize&&(t.bevelSize=8),void 0===t.bevelEnabled&&(t.bevelEnabled=!1),super(n,t)}this.type="TextGeometry"}}}},t={};function o(n){var s=t[n];if(void 0!==s)return s.exports;var r=t[n]={exports:{}};return e[n](r,r.exports,o),r.exports}(()=>{o(565),o(55);var e=(0,AFRAME.utils.debug)("aframe-text-component:error"),t=new THREE.FontLoader;AFRAME.registerComponent("text-geometry",{schema:{bevelEnabled:{default:!1},bevelSize:{default:8,min:0},bevelThickness:{default:12,min:0},curveSegments:{default:12,min:0},font:{type:"asset",default:"https://rawgit.com/ngokevin/kframe/master/components/text-geometry/lib/helvetiker_regular.typeface.json"},height:{default:.05,min:0},size:{default:.5,min:0},style:{default:"normal",oneOf:["normal","italics"]},weight:{default:"normal",oneOf:["normal","bold"]},value:{default:""}},update:function(o){var n=this.data,s=this.el.getOrCreateObject3D("mesh",THREE.Mesh);n.font.constructor===String?t.load(n.font,(function(e){var t=AFRAME.utils.clone(n);t.font=e,s.geometry=new THREE.TextGeometry(n.value,t)})):n.font.constructor===Object?s.geometry=new THREE.TextGeometry(n.value,n):e("Must provide `font` (typeface.json) or `fontPath` (string) to text component.")}})})()})();